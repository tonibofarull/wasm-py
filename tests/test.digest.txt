\x00asm
\x01\x00\x00\x00

\x01 \x07
    \x01`\x02\x7f\x7f\x01\x7f
\x03 \x02
    \x01\x00
\x04 \x05
    \x01p\x01\x01\x01
\x05 \x03
    \x01\x00\x02
\x06 \x08
    n   i32 var    i32cont n   n (i32)  i64.shr_u
    \x01\x7f\x01   A           \x80    \x88       \x04\x0b
\x07 \x10
    \x02
    (\x06 memory) \x02\x00
    (\x03 sum) \x00\x00
\n\t                    # \n=0x0A=10 and \t=0x09
    \x01
    \x07
        \x00
        ' '\x01         # local.get 1
        ' '\x00         # local.get 0
        j               # i32.add
        \x0b

\x00! # !=33
\x04name\x01\x06\x01\x00\x03sum\x07\x12\x01\x00\x0f__stack_pointer
\x00& # &=38
\tproducers\x01\x0cprocessed-by\x01\x05clang\x0615.0.7
